package br.com.desafiospring.backendemjava.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.HttpClientErrorException;

import br.com.desafiospring.backendemjava.models.entities.Funcionario;
import br.com.desafiospring.backendemjava.models.repositories.FuncionarioRepository;

@RestController
@RequestMapping("/api/Funcionario")
public class FuncionarioController {

	@Autowired
	private FuncionarioRepository funcionarioRepository;
	
	@GetMapping
	public ResponseEntity<List<Funcionario>> getAllUsers() {
		List<Funcionario> funcionarios = (List<Funcionario>) funcionarioRepository.findAll();
		return new ResponseEntity<List<Funcionario>>(funcionarios, HttpStatus.OK);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Funcionario> getUserById(@PathVariable int id){
		try {
			Funcionario func = funcionarioRepository.findById(id).get();
			if(func == null) {
				return new ResponseEntity<Funcionario>(HttpStatus.NOT_FOUND);
			}else {
				return new ResponseEntity<Funcionario>(func, HttpStatus.OK);				
			}		
			
		}catch(Exception e) {
			return new ResponseEntity<Funcionario>(HttpStatus.BAD_REQUEST);
		}
		
	}
}
