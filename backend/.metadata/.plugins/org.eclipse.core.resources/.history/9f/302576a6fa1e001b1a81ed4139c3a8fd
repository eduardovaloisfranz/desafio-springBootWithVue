package controllers;


import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;


@RunWith(SpringRunner.class)
@SpringBootTest(classes={SpringBootApplication.class})
public class FuncionarioControllerTests {
	
	@Autowired
	public WebApplicationContext ctx;
	
	public MockMvc mvc;
	
	@Before
	public void setup() {
		this.mvc = MockMvcBuilders.webAppContextSetup(ctx).build();
	}
	
	@Test
	public void testeGetAllFuncionarios() throws Exception {
		final String URL = "/api/Funcionario";
		this.mvc.perform(get(URL)).andExpect(status().isOk());		
	}
	
	@Test
	public void testeGetByIdExistente() throws Exception {
		final String URL = "/api/Funcionario/1";
		this.mvc.perform(get(URL)).andExpect(status().isOk());		
	}
	
	@Test
	public void testeGetByIdInexistente() throws Exception {
		final String URL = "/api/Funcionario/999";
		this.mvc.perform(get(URL)).andExpect(status().isNotFound());		
	}
	
	@Test
	public void testePostFuncionarioCargoExistente() throws Exception {
		final String URL = "/api/Funcionario";
		this.mvc.perform(post(URL).content("{\r\n"
				+ "	\"nome\": \"Eu AE\",\r\n"
				+ "	\"idade\": 23,\r\n"
				+ "	\"cargo\": {\r\n"
				+ "		\"id\": 2\r\n"
				+ "	}\r\n"
				+ "}")).andExpect(status().isCreated());		
	}	
	
	@Test
	public void testePostFuncionarioCargoInexistente() throws Exception {
		final String URL = "/api/Funcionario";
		this.mvc.perform(post(URL).content("{\r\n"
				+ "	\"nome\": \"Eu AE\",\r\n"
				+ "	\"idade\": 23,\r\n"
				+ "	\"cargo\": {\r\n"
				+ "		\"id\": 40\r\n"
				+ "	}\r\n"
				+ "}")).andExpect(status().isBadRequest());		
	}

	
	
	

}
